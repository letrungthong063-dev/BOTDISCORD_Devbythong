const fs = require("fs");
const path = require("path");
const { AttachmentBuilder } = require("discord.js");

module.exports = {
  name: "listframe",
  description: "Xem danh s√°ch c√°c file khung PNG c√≥ s·∫µn trong th∆∞ m·ª•c frames/",
  async execute(message) {
    const framesDir = path.join(__dirname, "../../frames");

    // N·∫øu ch∆∞a c√≥ th∆∞ m·ª•c frames th√¨ t·∫°o
    if (!fs.existsSync(framesDir)) {
      fs.mkdirSync(framesDir, { recursive: true });
      return message.reply("‚ùå Th∆∞ m·ª•c `frames/` ch∆∞a c√≥ khung n√†o.");
    }

    // L·ªçc file PNG
    const frames = fs.readdirSync(framesDir).filter(f => f.toLowerCase().endsWith(".png"));
    if (frames.length === 0) {
      return message.reply("‚ùå Kh√¥ng t√¨m th·∫•y khung n√†o trong th∆∞ m·ª•c `frames/`.");
    }

    // G·ª≠i danh s√°ch t·ª´ng nh√≥m 10 file (gi·ªõi h·∫°n Discord)
    const maxFilesPerMsg = 10;
    for (let i = 0; i < frames.length; i += maxFilesPerMsg) {
      const batch = frames.slice(i, i + maxFilesPerMsg);
      const filesToSend = batch.map(f => new AttachmentBuilder(path.join(framesDir, f)));
      const caption =
        "üìÇ **Danh s√°ch khung kh·∫£ d·ª•ng:**\n" +
        batch.map(f => `‚Ä¢ ${f.replace(".png", "")}`).join("\n");

      await message.reply({ content: caption, files: filesToSend });
    }
  }
};
